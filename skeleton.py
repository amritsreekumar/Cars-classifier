# -*- coding: utf-8 -*-
"""skeleton.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17TZHTU680tu_BL9cR134_0KbbrqtfJ-b
"""

from google.colab import drive, files
# change this to work with your setup
drive.mount("/content/drive/", force_remount=True)

import keras
import tensorflow as tf
import numpy as np

class Datagen(tf.keras.utils.Sequence):
  def __init__(self, list_IDs, labels, batch_size=32, dim = (32,32,32),n_classes=10, n_channels = 1, shuffle=True):
    self.dim = dim
    self.labels = labels
    self.list_IDs = list_IDs
    self.n_channels = n_channels
    self.batch_size = batch_size
    self.n_classes = n_classes
    self.shuffle = shuffle
    self.on_epoch_end()

  def __len__(self):
    #number of batches per epoch
    return int(np.floor(len(self.list_IDs)/self.batch_size))

  def __getitem__(self, index):
    indexes = self.indexes[index * self.batch_size:(index + 1) * self.batch_size] 
    list_IDs_temp = [self.list_IDs[k] for k in indexes]     # Generate data
    X, y = self.__data_generation(list_IDs_temp) #to be implemented
    return X, y

  def on_epoch_end(self):
    self.indexes = np.arange(len(self.list_IDs))
    if self.shuffle == True:
      np.random.shuffle(self.indexes)

  def __data_generation(self, list_IDs_temp):
    
    return X, y

